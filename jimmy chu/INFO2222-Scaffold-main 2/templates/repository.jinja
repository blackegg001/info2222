{% extends 'base.jinja' %}


{% block content %} 
   <style>
    nav {
        border-bottom: 1px solid black;
        overflow: auto
    }

    #repository_box {
        border: 1px solid black; 
        height: 600px; 
        width: 1200px; 
        overflow: auto;
        padding: 2px;
    }

    .text  {
        margin-top: 2px;
        margin-bottom: 2px;
    }

</style>

<nav style="border-bottom: 1px solid black;">
    <ol style="float: right">
        <li style="display:inline-block">Username:  {{ username }} </li>
    </ol>
</nav>

<h1>Knowledge repository </h1>

<main>
    <section id="logout">
        <p class="text">logout</p>
        <button onclick="logout()">logout</button>
    </section>

    <section id="message_app">
        <p class="text">message_app</p>
        <button onclick="message_app()">enter</button>
    </section>

    <section id="repository_box"></section>

    <section id="Make_box" >
        <p class="text">Make an article: </p>
        <input id="message" placeholder="message">
        <button onclick="write()">Write</button>
        <button onclick="save()">Save Article</button>
    </section>

    <section id="Comment_choice">
        <p class="text">Comment on whose article: </p>
        <input id="receiver" placeholder="username">
        <button onclick="comment_choice()">Comment</button>
    </section>

    <section id="Comment_box" style="display: none" >
        <p class="text">Comment: </p>
        <input id="message" placeholder="message">
        <button onclick="comment_send">Send</button>
        <button onclick="leave()">Leave Room</button>
    </section>

    <section id="Modify_choice">
        <p class="text">Modify whose article: </p>
        <input id="receiver" placeholder="username">
        <button onclick="comment_choice()">Modify</button>
    </section>

    <section id="Modify_box" style="display: none" >
        <p class="text">Modify: </p>
        <input id="message" placeholder="message">
        <button onclick="send()">Send</button>
        <button onclick="leave()">Leave Room</button>
    </section>

    <section id="Delete_choice">
        <p class="text">Delete whose article or comment: </p>
        <input id="receiver" placeholder="username">
        <button onclick="comment_choice()">delete article</button>
        <button onclick="comment_choice()">delete comment</button>
    </section>

    <section id="Mute_choice">
        <p class="text">Enter the username to mute: </p>
        <input id="receiver" placeholder="username">
        <button onclick="comment_choice()">Mute</button>
    </section>

    <section id="Unmute_choice">
        <p class="text">Enter the username to unmute: </p>
        <input id="receiver" placeholder="username">
        <button onclick="comment_choice()">Unmute</button>
    </section>
    <!--
    <section id = "accept or reject">
        <p class="text">send friend request to: </p>
        <input id= "friendreq_receiver">
        <button onclick="send_friend_req()">Add friend</button>

        <p class="text">Accept friend request from: </p>
        <input id= "acceptfriendreq_receiver">
        <button onclick="acceptfriend_req()">Accept friend request</button>

        <p class="text">Reject friend request from: </p>
        <input id= "rejectfriendreq_receiver">
        <button onclick="rejectfriend_req()">Reject friend request</button>
    </section> -->

    

    




<script src="/static/js/libs/socket.io.min.js"></script>
<script>
    let room_id = 0;

    $("#message").on("keyup", (e) => {
        if (e.key == "Enter") {
            send();
        }
    })

     $("#receiver").on("keyup", (e) => {
        if (e.key == "Enter") {
            join_room();
        }
    })


    $(document).ready(() => {

        if (Cookies.get("room_id") == undefined) {
            return;
        }

        $("#chat_box").hide();
        $("#input_box").show();
        room_id = parseInt(Cookies.get("room_id"));
    })
    
    let username = "{{ username }}";

    Cookies.set('username', username);

    const socket = io();

    socket.on("incoming", (msg, color="black") => {
        add_message(msg, color);
    })
    
    function send() {
        let message = $("#message").val();
        $("#message").val("");
        socket.emit("send", username, message, room_id);  
    } 


    function join_room() {
       
        let receiver = $("#receiver").val();

        socket.emit("join", username, receiver, (res) => {
            // res is a string with the error message if the error occurs
            // this is a pretty bad way of doing error handling, but watevs
            if (typeof res != "number") {
                alert(res);
                return;
            }

            room_id = res;
            Cookies.set("room_id", room_id);

            $("#chat_box").hide();
            $("#input_box").show();
        });
     
    }

    function leave() {
        Cookies.remove("room_id");
        socket.emit("leave", username, room_id);
        $("#input_box").hide();
        $("#chat_box").show();
    }

    function add_message(message, color) {
        let box = $("#repository_box");
        let child = $(`<p style="color:${color}; margin: 0px;"></p>`).text(message);
        box.append(child);
    }

    async function message_app() {
        let msgURL = "{{ url_for('msg_user') }}";
        res = await axios.post(msgURL, {});
        window.open(res.data, "_self");
    }

    
    
    
</script>

{% endblock %}
